name: "handle PR"

on:
  pull_request:
    branches:
      - main

env: 
  COMPONENT_BUILDER: builder
  COMPONENT_API: api
  AWS_ECR_REGION: us-east-2
  ACTIONS_STEP_DEBUG: true

jobs:

  lint-golangci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"
      - run: go version

      - name: go fmt
        run: |
          go fmt ./...

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint builder Dockerfile
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: ./dockerfile/builder/Dockerfile

      - name: Lint api Dockerfile
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: ./dockerfile/api/Dockerfile

  install-go:
    needs: [lint-golangci, lint-dockerfile]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"
      - run: go version
  
  build-builder-api-images:
    needs: [install-go]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the builder and api image
        env:
          AWS_REGION: ${{ env.AWS_ECR_REGION }}
          COMPONENT_BUILDER: ${{ env.COMPONENT_BUILDER }}
          IMAGE_TAG: ${{ github.sha }}
          COMPONENT_API: ${{ env.COMPONENT_API }}
          DOCKERHUB_URL: ''
        run: |
          docker build \
            -t ${COMPONENT_BUILDER}:latest \
            -f ./dockerfile/builder/Dockerfile \
            ./dockerfile/builder 

          docker build \
            -t ${COMPONENT_API}:${IMAGE_TAG} \
            -f ./dockerfile/api/Dockerfile \
            --build-arg DOCKERHUB_URL=${DOCKERHUB_URL} \
            .

      - name: Scan image vulnerabilities using Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.COMPONENT_API }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

